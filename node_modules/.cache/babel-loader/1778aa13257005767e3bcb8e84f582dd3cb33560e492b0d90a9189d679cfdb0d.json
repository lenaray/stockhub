{"ast":null,"code":"var _jsxFileName = \"/Users/sonali/Desktop/stockhub/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport reactLogo from './assets/react.svg';\nimport viteLogo from './vite.svg';\nimport './App.css';\nimport { Line } from 'react-chartjs-2';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const [submittedValues, setSubmittedValue] = useState([]);\n  const [hoveredTicker, setHoveredTicker] = useState(null);\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [tickerData, setTickerData] = useState(null);\n  const [tickerName, setTickerName] = useState(null);\n  const [tickerHistory, setTickerHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showGraph, setShowGraph] = useState(false);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const handleInputChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  // TOZRELWV9WFJ4VBM\n\n  const fetchData = ticker => {\n    setLoading(true);\n    const API_KEY = 'Dok1CpSQK9Wnjg8G05oP2L_nAwKkKSkl';\n    let API_Call = `https://api.polygon.io/v1/open-close/${ticker}/2023-01-09?adjusted=true&apiKey=${API_KEY}`;\n    return fetch(API_Call).then(response => response.json());\n  };\n  const fetchName = ticker => {\n    setLoading(true);\n    const API_KEY = 'Dok1CpSQK9Wnjg8G05oP2L_nAwKkKSkl';\n    let API_Call = `https://api.polygon.io/v3/reference/tickers?ticker=${ticker}&active=true&apiKey=${API_KEY}`;\n    return fetch(API_Call).then(response => response.json());\n  };\n  useEffect(() => {\n    setLoading(false);\n  }, [tickerData, tickerName]);\n  useEffect(() => {\n    console.log('Updated tickerData', tickerData);\n  }, [tickerData]);\n  useEffect(() => {}, [hoveredTicker]);\n  useEffect(() => {\n    console.log(showGraph);\n  }, [showGraph]);\n  const calculatePercentageChange = (openPrice, closePrice) => {\n    if (openPrice === 0) {\n      return 0;\n    }\n    return (closePrice - openPrice) / openPrice * 100;\n  };\n  const fetchGraphData = (ticker, startDate, endDate) => {\n    setLoading(true);\n    const API_KEY = 'Dok1CpSQK9Wnjg8G05oP2L_nAwKkKSkl';\n    if (!startDate || !endDate) {\n      const currentYear = new Date().getFullYear();\n      console.log(currentYear);\n      startDate = `${currentYear}-01-01`;\n      endDate = `${currentYear}-12-31`;\n    }\n    let API_Call = `https://api.polygon.io/v2/aggs/ticker/${ticker}/range/1/month/${startDate}/${endDate}?adjusted=true&sort=asc&limit=120&apiKey=${API_KEY}`;\n    fetch(API_Call).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n      if (data.status === \"OK\") {\n        const closingPrices = data.results.map(result => result.c);\n        console.log(\"Closing Prices:\", closingPrices);\n        setTickerHistory({\n          closingPrices\n        });\n      } else {\n        console.error(\"Error fetching graph data:\", data.status);\n      }\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  useEffect(() => {\n    console.log(\"Updated tickerHistory\", tickerHistory);\n  }, [tickerHistory]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmittedValue(prevValues => [...prevValues, inputValue]);\n    setInputValue('');\n  };\n  const handleHover = ticker => {\n    console.log(`Hovered on ticker: ${ticker}`);\n    setHoveredTicker(ticker);\n    // handleFetchData(ticker);\n  };\n  const handleTickerClick = async ticker => {\n    setSelectedTicker(ticker);\n    if (showGraph) {\n      setShowGraph(false);\n    }\n    try {\n      const [data, nameData] = await Promise.all([fetchData(ticker), fetchName(ticker)]);\n      const mostRecentOpenPrice = data['open'];\n      const mostRecentClosePrice = data['close'];\n      setTickerData({\n        ticker,\n        mostRecentOpenPrice,\n        mostRecentClosePrice\n      });\n      const name = nameData.results[0].name;\n      setTickerName({\n        name\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleGraphToggle = async ticker => {\n    if (showGraph) {\n      setTickerHistory([]);\n    } else {\n      fetchGraphData(ticker, startDate, endDate);\n    }\n    setShowGraph(!showGraph);\n    // const closingPrices = await fetchGraphData(ticker);\n    // setTickerHistory(closingPrices);\n  };\n  const handleStartDateChange = date => {\n    setStartDate(date);\n    console.log(\"Selected Start Date:\", date);\n  };\n  const handleEndDateChange = date => {\n    setEndDate(date);\n    console.log(\"Selected End Date:\", date);\n  };\n  const handleApplyFilter = () => {\n    fetchGraphData(selectedTicker, startDate, endDate);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      children: \"StockHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Enter ticker name\",\n        className: \"value\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticker-grid\",\n        children: submittedValues.map((ticker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ticker-box ${hoveredTicker === ticker ? 'hovered' : ''}`,\n          onMouseOver: () => handleHover(ticker),\n          onClick: () => handleTickerClick(ticker),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: ticker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }, this), selectedTicker === ticker && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"additional-content\",\n            children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: tickerData && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: tickerName.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Current Price: \", tickerData.mostRecentOpenPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Open Price: \", tickerData.mostRecentClosePrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Percentage Change:\", ' ', calculatePercentageChange(tickerData.mostRecentOpenPrice, tickerData.mostRecentClosePrice).toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"expand-button\",\n                  onClick: () => handleGraphToggle(ticker),\n                  children: \"\\u25BA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true)\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), showGraph && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-filter\",\n          children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: startDate,\n            onChange: handleStartDateChange,\n            selectsStart: true,\n            startDate: startDate,\n            endDate: endDate,\n            placeholderText: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: endDate,\n            onChange: handleEndDateChange,\n            selectsEnd: true,\n            startDate: startDate,\n            endDate: endDate,\n            placeholderText: \"End Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleApplyFilter,\n            children: \"Apply Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: ['Day 1', 'Day 2', 'Day 3', 'Day 4', 'Day 5'],\n            datasets: [{\n              label: 'Closing Price',\n              data: tickerHistory.closingPrices,\n              fill: false,\n              borderColor: 'rgba(75,192,192,1)',\n              lineTension: 0.1\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"jE1Rou0ysneQhDZUF1m/cJiNKU8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","reactLogo","viteLogo","Line","DatePicker","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","inputValue","setInputValue","submittedValues","setSubmittedValue","hoveredTicker","setHoveredTicker","selectedTicker","setSelectedTicker","tickerData","setTickerData","tickerName","setTickerName","tickerHistory","setTickerHistory","loading","setLoading","showGraph","setShowGraph","startDate","setStartDate","endDate","setEndDate","handleInputChange","e","target","value","fetchData","ticker","API_KEY","API_Call","fetch","then","response","json","fetchName","console","log","calculatePercentageChange","openPrice","closePrice","fetchGraphData","currentYear","Date","getFullYear","data","status","closingPrices","results","map","result","c","error","finally","handleSubmit","preventDefault","prevValues","handleHover","handleTickerClick","nameData","Promise","all","mostRecentOpenPrice","mostRecentClosePrice","name","handleGraphToggle","handleStartDateChange","date","handleEndDateChange","handleApplyFilter","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","index","onMouseOver","onClick","toFixed","selected","selectsStart","placeholderText","selectsEnd","labels","datasets","label","fill","borderColor","lineTension","_c","$RefreshReg$"],"sources":["/Users/sonali/Desktop/stockhub/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport reactLogo from './assets/react.svg'\nimport viteLogo from './vite.svg'\nimport './App.css'\nimport { Line } from 'react-chartjs-2';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'chart.js/auto';\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [submittedValues, setSubmittedValue] = useState([]);\n  const [hoveredTicker, setHoveredTicker] = useState(null);\n  const [selectedTicker, setSelectedTicker] = useState(null);\n  const [tickerData, setTickerData] = useState(null);\n  const [tickerName, setTickerName] = useState(null);\n  const [tickerHistory, setTickerHistory] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showGraph, setShowGraph] = useState(false);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n\n  const handleInputChange = (e) => {\n      setInputValue(e.target.value);\n  };\n\n  // TOZRELWV9WFJ4VBM\n\n  const fetchData = (ticker) => {\n      setLoading(true);\n      const API_KEY = 'Dok1CpSQK9Wnjg8G05oP2L_nAwKkKSkl';\n      let API_Call = `https://api.polygon.io/v1/open-close/${ticker}/2023-01-09?adjusted=true&apiKey=${API_KEY}`;\n      return fetch(API_Call).then((response) => response.json());\n  }\n\n  const fetchName = (ticker) => {\n    setLoading(true);\n    const API_KEY = 'Dok1CpSQK9Wnjg8G05oP2L_nAwKkKSkl';\n    let API_Call = `https://api.polygon.io/v3/reference/tickers?ticker=${ticker}&active=true&apiKey=${API_KEY}`;\n    return fetch(API_Call).then((response) => response.json());\n  }\n\n  useEffect(() => {\n      setLoading(false);\n  }, [tickerData, tickerName]);\n\n  useEffect(() => {\n      console.log('Updated tickerData', tickerData);\n  }, [tickerData]);\n\n  useEffect(() => {\n    }, [hoveredTicker]);\n\n  useEffect(() => {\n      console.log(showGraph);\n  }, [showGraph]);\n\n  const calculatePercentageChange = (openPrice, closePrice) => {\n      if (openPrice === 0) {\n          return 0;\n      }\n      return ((closePrice - openPrice) / openPrice) * 100;\n  };\n\n  const fetchGraphData = (ticker, startDate, endDate) => {\n    setLoading(true);\n    const API_KEY = 'Dok1CpSQK9Wnjg8G05oP2L_nAwKkKSkl';\n\n    if (!startDate || !endDate) {\n        const currentYear = new Date().getFullYear();\n        console.log(currentYear);\n        startDate = `${currentYear}-01-01`;\n        endDate = `${currentYear}-12-31`;\n    }\n\n    let API_Call = `https://api.polygon.io/v2/aggs/ticker/${ticker}/range/1/month/${startDate}/${endDate}?adjusted=true&sort=asc&limit=120&apiKey=${API_KEY}`;\n\n    fetch(API_Call)\n        .then(\n            function(response) {\n                return response.json();\n            }\n        ).then(\n            function(data) {\n                console.log(data);\n                if (data.status === \"OK\") {\n                    const closingPrices = data.results.map(result => result.c);\n                    console.log(\"Closing Prices:\", closingPrices);\n                    setTickerHistory({ closingPrices });\n                } else {\n                    console.error(\"Error fetching graph data:\", data.status);\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n            })\n  }\n\n  useEffect(() => {\n      console.log(\"Updated tickerHistory\", tickerHistory);\n  }, [tickerHistory]);\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      setSubmittedValue((prevValues) => [...prevValues, inputValue]);\n      setInputValue('');\n  };\n\n  const handleHover = (ticker) => {\n    console.log(`Hovered on ticker: ${ticker}`);\n    setHoveredTicker(ticker);\n    // handleFetchData(ticker);\n  };\n\n  const handleTickerClick = async (ticker) => {\n      setSelectedTicker(ticker);\n      if (showGraph) {\n        setShowGraph(false);\n    }\n    \n      try {\n          const[data, nameData] = await Promise.all([fetchData(ticker), fetchName(ticker)]);\n          const mostRecentOpenPrice = data['open'];\n          const mostRecentClosePrice = data['close'];\n          setTickerData({ ticker, mostRecentOpenPrice, mostRecentClosePrice });\n\n          const name = nameData.results[0].name;\n          setTickerName({ name });\n      } catch (error) {\n          console.error('Error fetching data:', error);\n      }\n  };\n\n  const handleGraphToggle = async (ticker) => {\n    if (showGraph) {\n        setTickerHistory([]);\n    } else {\n        fetchGraphData(ticker, startDate, endDate);\n    }\n    setShowGraph(!showGraph);\n    // const closingPrices = await fetchGraphData(ticker);\n    // setTickerHistory(closingPrices);\n  }\n\n  const handleStartDateChange = (date) => {\n      setStartDate(date);\n      console.log(\"Selected Start Date:\", date);\n  }\n\n  const handleEndDateChange = (date) => {\n      setEndDate(date);\n      console.log(\"Selected End Date:\", date);\n  }\n\n  const handleApplyFilter = () => {\n      fetchGraphData(selectedTicker, startDate, endDate);\n  }\n\n  return (\n    <>\n      <h1 className=\"header\">StockHub</h1>\n      <form onSubmit={handleSubmit} className=\"input\">\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            placeholder=\"Enter ticker name\"\n            className=\"value\"\n            />\n            <button type=\"submit\" className=\"button\">Add</button>\n      </form>\n      <div className = \"container\">\n        <div className=\"ticker-grid\">\n            {submittedValues.map((ticker, index) => (\n                <div\n                    key={index}\n                    className={`ticker-box ${hoveredTicker === ticker ? 'hovered' : ''}`}\n                    onMouseOver={() => handleHover(ticker)}\n                    onClick={() => handleTickerClick(ticker)}\n                    >\n                    <div>{ticker}</div>\n                    {selectedTicker === ticker && (\n                    <div className=\"additional-content\">\n                        {loading ? (\n                            <p>Loading...</p>\n                        ) : (\n                            <>\n                                {tickerData && (\n                                    <>\n                                        <p>{tickerName.name}</p>\n                                        <p>Current Price: {tickerData.mostRecentOpenPrice}</p>\n                                        <p>Open Price: {tickerData.mostRecentClosePrice}</p>\n                                        <p>\n                                            Percentage Change:{' '}\n                                            {calculatePercentageChange(\n                                                tickerData.mostRecentOpenPrice,\n                                                tickerData.mostRecentClosePrice\n                                            ).toFixed(2)}%\n                                        </p>\n                                        <button className=\"expand-button\" onClick={() => handleGraphToggle(ticker)}>&#9658;</button>\n                                    </>\n                                )}\n                            </>\n                        )}\n                    </div>\n                    )}\n                </div>\n            ))}\n            </div>\n            {showGraph && (\n                <div className=\"chart-container\">\n                    <div className=\"date-filter\">\n                        <DatePicker\n                            selected={startDate}\n                            onChange={handleStartDateChange}\n                            selectsStart\n                            startDate={startDate}\n                            endDate={endDate}\n                            placeholderText=\"Start Date\"\n                        />\n                        <DatePicker\n                            selected={endDate}\n                            onChange={handleEndDateChange}\n                            selectsEnd\n                            startDate={startDate}\n                            endDate={endDate}\n                            placeholderText=\"End Date\"\n                        />\n                        <button onClick={handleApplyFilter}>Apply Filter</button>\n                    </div>\n                    {loading ? (\n                        <p>Loading...</p>\n                    ) : (\n                            <Line\n                            data={{\n                                labels:['Day 1', 'Day 2', 'Day 3', 'Day 4', 'Day 5'],\n                                datasets: [\n                                    {\n                                        label: 'Closing Price',\n                                        data: tickerHistory.closingPrices,\n                                        fill: false,\n                                        borderColor: 'rgba(75,192,192,1)',\n                                        lineTension: 0.1,\n                                    },\n                                ],\n                            }}\n                            />\n                    )}\n                </div>\n            )}\n        </div>\n    </>\n  );\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,WAAW;AAClB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AACnD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,eAAe,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACzD,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACwB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMkC,iBAAiB,GAAIC,CAAC,IAAK;IAC7BtB,aAAa,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;;EAED;;EAEA,MAAMC,SAAS,GAAIC,MAAM,IAAK;IAC1BZ,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMa,OAAO,GAAG,kCAAkC;IAClD,IAAIC,QAAQ,GAAI,wCAAuCF,MAAO,oCAAmCC,OAAQ,EAAC;IAC1G,OAAOE,KAAK,CAACD,QAAQ,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMC,SAAS,GAAIP,MAAM,IAAK;IAC5BZ,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMa,OAAO,GAAG,kCAAkC;IAClD,IAAIC,QAAQ,GAAI,sDAAqDF,MAAO,uBAAsBC,OAAQ,EAAC;IAC3G,OAAOE,KAAK,CAACD,QAAQ,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED5C,SAAS,CAAC,MAAM;IACZ0B,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACP,UAAU,EAAEE,UAAU,CAAC,CAAC;EAE5BrB,SAAS,CAAC,MAAM;IACZ8C,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE5B,UAAU,CAAC;EACjD,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhBnB,SAAS,CAAC,MAAM,CACd,CAAC,EAAE,CAACe,aAAa,CAAC,CAAC;EAErBf,SAAS,CAAC,MAAM;IACZ8C,OAAO,CAACC,GAAG,CAACpB,SAAS,CAAC;EAC1B,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMqB,yBAAyB,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IACzD,IAAID,SAAS,KAAK,CAAC,EAAE;MACjB,OAAO,CAAC;IACZ;IACA,OAAQ,CAACC,UAAU,GAAGD,SAAS,IAAIA,SAAS,GAAI,GAAG;EACvD,CAAC;EAED,MAAME,cAAc,GAAGA,CAACb,MAAM,EAAET,SAAS,EAAEE,OAAO,KAAK;IACrDL,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMa,OAAO,GAAG,kCAAkC;IAElD,IAAI,CAACV,SAAS,IAAI,CAACE,OAAO,EAAE;MACxB,MAAMqB,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC5CR,OAAO,CAACC,GAAG,CAACK,WAAW,CAAC;MACxBvB,SAAS,GAAI,GAAEuB,WAAY,QAAO;MAClCrB,OAAO,GAAI,GAAEqB,WAAY,QAAO;IACpC;IAEA,IAAIZ,QAAQ,GAAI,yCAAwCF,MAAO,kBAAiBT,SAAU,IAAGE,OAAQ,4CAA2CQ,OAAQ,EAAC;IAEzJE,KAAK,CAACD,QAAQ,CAAC,CACVE,IAAI,CACD,UAASC,QAAQ,EAAE;MACf,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC1B,CACJ,CAAC,CAACF,IAAI,CACF,UAASa,IAAI,EAAE;MACXT,OAAO,CAACC,GAAG,CAACQ,IAAI,CAAC;MACjB,IAAIA,IAAI,CAACC,MAAM,KAAK,IAAI,EAAE;QACtB,MAAMC,aAAa,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,CAAC,CAAC;QAC1Df,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEU,aAAa,CAAC;QAC7CjC,gBAAgB,CAAC;UAAEiC;QAAc,CAAC,CAAC;MACvC,CAAC,MAAM;QACHX,OAAO,CAACgB,KAAK,CAAC,4BAA4B,EAAEP,IAAI,CAACC,MAAM,CAAC;MAC5D;IACJ,CAAC,CAAC,CACDO,OAAO,CAAC,MAAM;MACXrC,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACZ,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZ8C,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAExB,aAAa,CAAC;EACvD,CAAC,EAAE,CAACA,aAAa,CAAC,CAAC;EAEnB,MAAMyC,YAAY,GAAI9B,CAAC,IAAK;IACxBA,CAAC,CAAC+B,cAAc,CAAC,CAAC;IAClBnD,iBAAiB,CAAEoD,UAAU,IAAK,CAAC,GAAGA,UAAU,EAAEvD,UAAU,CAAC,CAAC;IAC9DC,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAMuD,WAAW,GAAI7B,MAAM,IAAK;IAC9BQ,OAAO,CAACC,GAAG,CAAE,sBAAqBT,MAAO,EAAC,CAAC;IAC3CtB,gBAAgB,CAACsB,MAAM,CAAC;IACxB;EACF,CAAC;EAED,MAAM8B,iBAAiB,GAAG,MAAO9B,MAAM,IAAK;IACxCpB,iBAAiB,CAACoB,MAAM,CAAC;IACzB,IAAIX,SAAS,EAAE;MACbC,YAAY,CAAC,KAAK,CAAC;IACvB;IAEE,IAAI;MACA,MAAK,CAAC2B,IAAI,EAAEc,QAAQ,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CAAClC,SAAS,CAACC,MAAM,CAAC,EAAEO,SAAS,CAACP,MAAM,CAAC,CAAC,CAAC;MACjF,MAAMkC,mBAAmB,GAAGjB,IAAI,CAAC,MAAM,CAAC;MACxC,MAAMkB,oBAAoB,GAAGlB,IAAI,CAAC,OAAO,CAAC;MAC1CnC,aAAa,CAAC;QAAEkB,MAAM;QAAEkC,mBAAmB;QAAEC;MAAqB,CAAC,CAAC;MAEpE,MAAMC,IAAI,GAAGL,QAAQ,CAACX,OAAO,CAAC,CAAC,CAAC,CAACgB,IAAI;MACrCpD,aAAa,CAAC;QAAEoD;MAAK,CAAC,CAAC;IAC3B,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACZhB,OAAO,CAACgB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMa,iBAAiB,GAAG,MAAOrC,MAAM,IAAK;IAC1C,IAAIX,SAAS,EAAE;MACXH,gBAAgB,CAAC,EAAE,CAAC;IACxB,CAAC,MAAM;MACH2B,cAAc,CAACb,MAAM,EAAET,SAAS,EAAEE,OAAO,CAAC;IAC9C;IACAH,YAAY,CAAC,CAACD,SAAS,CAAC;IACxB;IACA;EACF,CAAC;EAED,MAAMiD,qBAAqB,GAAIC,IAAI,IAAK;IACpC/C,YAAY,CAAC+C,IAAI,CAAC;IAClB/B,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE8B,IAAI,CAAC;EAC7C,CAAC;EAED,MAAMC,mBAAmB,GAAID,IAAI,IAAK;IAClC7C,UAAU,CAAC6C,IAAI,CAAC;IAChB/B,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE8B,IAAI,CAAC;EAC3C,CAAC;EAED,MAAME,iBAAiB,GAAGA,CAAA,KAAM;IAC5B5B,cAAc,CAAClC,cAAc,EAAEY,SAAS,EAAEE,OAAO,CAAC;EACtD,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAAwE,QAAA,gBACE1E,OAAA;MAAI2E,SAAS,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC/E,OAAA;MAAMgF,QAAQ,EAAEtB,YAAa;MAACiB,SAAS,EAAC,OAAO;MAAAD,QAAA,gBAC3C1E,OAAA;QACEiF,IAAI,EAAC,MAAM;QACXnD,KAAK,EAAEzB,UAAW;QAClB6E,QAAQ,EAAEvD,iBAAkB;QAC5BwD,WAAW,EAAC,mBAAmB;QAC/BR,SAAS,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC,eACF/E,OAAA;QAAQiF,IAAI,EAAC,QAAQ;QAACN,SAAS,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACP/E,OAAA;MAAK2E,SAAS,EAAG,WAAW;MAAAD,QAAA,gBAC1B1E,OAAA;QAAK2E,SAAS,EAAC,aAAa;QAAAD,QAAA,EACvBnE,eAAe,CAAC8C,GAAG,CAAC,CAACrB,MAAM,EAAEoD,KAAK,kBAC/BpF,OAAA;UAEI2E,SAAS,EAAG,cAAalE,aAAa,KAAKuB,MAAM,GAAG,SAAS,GAAG,EAAG,EAAE;UACrEqD,WAAW,EAAEA,CAAA,KAAMxB,WAAW,CAAC7B,MAAM,CAAE;UACvCsD,OAAO,EAAEA,CAAA,KAAMxB,iBAAiB,CAAC9B,MAAM,CAAE;UAAA0C,QAAA,gBAEzC1E,OAAA;YAAA0E,QAAA,EAAM1C;UAAM;YAAA4C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAClBpE,cAAc,KAAKqB,MAAM,iBAC1BhC,OAAA;YAAK2E,SAAS,EAAC,oBAAoB;YAAAD,QAAA,EAC9BvD,OAAO,gBACJnB,OAAA;cAAA0E,QAAA,EAAG;YAAU;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,gBAEjB/E,OAAA,CAAAE,SAAA;cAAAwE,QAAA,EACK7D,UAAU,iBACPb,OAAA,CAAAE,SAAA;gBAAAwE,QAAA,gBACI1E,OAAA;kBAAA0E,QAAA,EAAI3D,UAAU,CAACqD;gBAAI;kBAAAQ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACxB/E,OAAA;kBAAA0E,QAAA,GAAG,iBAAe,EAAC7D,UAAU,CAACqD,mBAAmB;gBAAA;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACtD/E,OAAA;kBAAA0E,QAAA,GAAG,cAAY,EAAC7D,UAAU,CAACsD,oBAAoB;gBAAA;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACpD/E,OAAA;kBAAA0E,QAAA,GAAG,oBACmB,EAAC,GAAG,EACrBhC,yBAAyB,CACtB7B,UAAU,CAACqD,mBAAmB,EAC9BrD,UAAU,CAACsD,oBACf,CAAC,CAACoB,OAAO,CAAC,CAAC,CAAC,EAAC,GACjB;gBAAA;kBAAAX,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eACJ/E,OAAA;kBAAQ2E,SAAS,EAAC,eAAe;kBAACW,OAAO,EAAEA,CAAA,KAAMjB,iBAAiB,CAACrC,MAAM,CAAE;kBAAA0C,QAAA,EAAC;gBAAO;kBAAAE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA,eAC9F;YACL,gBACH;UACL;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACJ;QAAA,GA9BIK,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+BT,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,EACL1D,SAAS,iBACNrB,OAAA;QAAK2E,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC5B1E,OAAA;UAAK2E,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACxB1E,OAAA,CAACF,UAAU;YACP0F,QAAQ,EAAEjE,SAAU;YACpB2D,QAAQ,EAAEZ,qBAAsB;YAChCmB,YAAY;YACZlE,SAAS,EAAEA,SAAU;YACrBE,OAAO,EAAEA,OAAQ;YACjBiE,eAAe,EAAC;UAAY;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC,eACF/E,OAAA,CAACF,UAAU;YACP0F,QAAQ,EAAE/D,OAAQ;YAClByD,QAAQ,EAAEV,mBAAoB;YAC9BmB,UAAU;YACVpE,SAAS,EAAEA,SAAU;YACrBE,OAAO,EAAEA,OAAQ;YACjBiE,eAAe,EAAC;UAAU;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACF/E,OAAA;YAAQsF,OAAO,EAAEb,iBAAkB;YAAAC,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,EACL5D,OAAO,gBACJnB,OAAA;UAAA0E,QAAA,EAAG;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAEb/E,OAAA,CAACH,IAAI;UACLoD,IAAI,EAAE;YACF2C,MAAM,EAAC,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;YACpDC,QAAQ,EAAE,CACN;cACIC,KAAK,EAAE,eAAe;cACtB7C,IAAI,EAAEhC,aAAa,CAACkC,aAAa;cACjC4C,IAAI,EAAE,KAAK;cACXC,WAAW,EAAE,oBAAoB;cACjCC,WAAW,EAAE;YACjB,CAAC;UAET;QAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eACR,CAAC;AAEP;AAAC3E,EAAA,CApPQD,GAAG;AAAA+F,EAAA,GAAH/F,GAAG;AAsPZ,eAAeA,GAAG;AAAA,IAAA+F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}